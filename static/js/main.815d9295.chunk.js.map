{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Nav.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","type","onChange","e","target","value","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","twtObj","isOwner","edit","setEdit","text","newTwt","setNewTwt","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEdit","update","alt","src","faTrash","faPencilAlt","TweetFactory","twt","setTwt","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","time","Date","now","writerId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","twts","setTwts","useEffect","orderBy","onSnapshot","snapshot","twtArray","docs","map","Nav","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.815d9295.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n    refreshUser();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  // const getMyTwts = async () => {\r\n  //   const twts = await dbService\r\n  //     .collection('tweets')\r\n  //     .where('writerId', '==', userObj.uid)\r\n  //     .orderBy('time', 'desc')\r\n  //     .get();\r\n  //   console.log(twts.docs.map((doc) => doc.data()));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyTwts();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          autoFocus\r\n          placeholder=\"Input your new display name.\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n      } else {\r\n        // login\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Log in. ' : 'Create Account'}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tweet = ({ twtObj, isOwner }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const [newTwt, setNewTwt] = useState(twtObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('정말로 삭제하시겠습니까?');\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${twtObj.id}`).delete(); // 트윗 삭제\r\n      await storageService.refFromURL(twtObj.attachmentUrl).delete(); // 사진 삭제\r\n    }\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setEdit((prev) => !prev);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNewTwt(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`tweets/${twtObj.id}`).update({\r\n      text: newTwt,\r\n    });\r\n    setEdit(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {edit ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your Tweet\"\r\n              value={newTwt}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEdit} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{twtObj.text}</h4>\r\n          {twtObj.attachmentUrl && <img alt=\"\" src={twtObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEdit}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [twt, setTwt] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const onSubmit = async (e) => {\r\n    if (twt === '') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const twtObj = {\r\n      text: twt,\r\n      time: Date.now(),\r\n      writerId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection('tweets').add(twtObj);\r\n    setTwt('');\r\n    setAttachment('');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setTwt(e.target.value);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const theFile = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      setAttachment(finishedEvent.currentTarget.result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={twt}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              alt=\"\"\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Tweet from 'components/Tweet';\r\nimport TweetFactory from 'components/TweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [twts, setTwts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection('tweets')\r\n      .orderBy('time', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const twtArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTwts(twtArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {twts.map((twt) => (\r\n          <Tweet\r\n            key={twt.id}\r\n            twtObj={twt}\r\n            isOwner={twt.writerId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : 'Profile'}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Nav from './Nav';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Nav userObj={userObj} />}\r\n\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: '100%',\r\n                margin: '0 auto',\r\n                marginTop: 80,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from './AppRouter';\nimport { authService } from '../fbase';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n      <footer\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '4rem',\n        }}\n      >\n        &copy; {new Date().getFullYear()} Jowitter\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}